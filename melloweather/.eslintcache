[{"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/index.js":"1","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/App.js":"2","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/reportWebVitals.js":"3","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/HomeImg.js":"4","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/RightBar.js":"5","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/NavBar.js":"6","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/Home.js":"7","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/CurrentLocation.js":"8","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/AskLocation.js":"9","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/index.jsx":"10","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/PageNotFound.js":"11","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/EnterLocation.js":"12","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/SurpriseMe.js":"13","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/SearchBar.js":"14","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/Results.js":"15","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/getLoginStatus.js":"16","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/MapComponent.js":"17","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/AutocompleteMaps.js":"18"},{"size":679,"mtime":1612057891841,"results":"19","hashOfConfig":"20"},{"size":2715,"mtime":1612098140216,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611999614000,"results":"22","hashOfConfig":"23"},{"size":1743,"mtime":1612085819687,"results":"24","hashOfConfig":"20"},{"size":1049,"mtime":1612093618858,"results":"25","hashOfConfig":"20"},{"size":1401,"mtime":1612092607581,"results":"26","hashOfConfig":"20"},{"size":1295,"mtime":1612090090199,"results":"27","hashOfConfig":"23"},{"size":2901,"mtime":1612098252828,"results":"28","hashOfConfig":"20"},{"size":1380,"mtime":1612041020069,"results":"29","hashOfConfig":"20"},{"size":206,"mtime":1612040728498,"results":"30","hashOfConfig":"31"},{"size":231,"mtime":1612041404687,"results":"32","hashOfConfig":"23"},{"size":1750,"mtime":1612091807891,"results":"33","hashOfConfig":"20"},{"size":1980,"mtime":1612095073799,"results":"34","hashOfConfig":"20"},{"size":10169,"mtime":1612079397935,"results":"35","hashOfConfig":"20"},{"size":2968,"mtime":1612095905722,"results":"36","hashOfConfig":"20"},{"size":1047,"mtime":1612079610604,"results":"37","hashOfConfig":"20"},{"size":4184,"mtime":1612090125223,"results":"38","hashOfConfig":"23"},{"size":4220,"mtime":1612090726880,"results":"39","hashOfConfig":"20"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19mltg",{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1m0ajyi",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bm28bo",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/index.js",["79","80"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/App.js",["81","82","83","84"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/reportWebVitals.js",[],["85","86"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/HomeImg.js",["87","88","89"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/RightBar.js",["90"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/NavBar.js",["91"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/Home.js",["92","93"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/CurrentLocation.js",["94","95"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/AskLocation.js",["96","97"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/index.jsx",[],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/PageNotFound.js",["98","99"],"import React, {Component} from \"react\";\nimport CurrentLocation from '../Pages/CurrentLocation.js';\n\nfunction PageNotFound(){\n\n    return(\n        <div>\n            Page Not Found\n        </div>\n    )\n}\n\nexport default PageNotFound;","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/EnterLocation.js",["100","101","102","103","104"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/SurpriseMe.js",["105","106"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/SearchBar.js",["107","108","109","110","111","112","113","114"],"import TextField from '@material-ui/core/TextField';\nimport { Autocomplete } from '@material-ui/lab';\nimport countries from '../all-countries-and-cities-json/countries.json';\nimport NavBar from './NavBar';\nimport '../css/SearchBar.css'\nimport { motion } from 'framer-motion'\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport React, {Component} from \"react\";\nimport axios from 'axios';\n// const dotenv = require(\"dotenv\");\n// dotenv.config({ path: \"../config.env\" });\n\n\nclass SearchBar extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            countryValue: \"\",\n            cityValue: \"\",\n            citiesLst: [],\n            response: 0,\n        };\n\n        // this.geocodeLocation(\"Los Angeles\", \"California\");\n        // let resultsBtn = document.getElementById(\"resultsBtn\");\n        // resultsBtn.addEventListener(\"click\", function(){\n        //     this.geocodeLocation(this.state.cityValue, this.state.countryValue);\n        // });\n    } \n    geocodeLocation(city, country){\n        var queryCity = city.replace(\" \", \"+\");\n        var queryCountry= country.replace(\" \", \"+\");\n        var resultsBtn = document.getElementById(\"btnDiv\");\n        resultsBtn.onclick = this.geocodeLocation(\"Los Angeles\", \"California\");\n\n        var linkStr =\"https://api.opencagedata.com/geocode/v1/json?q=\" + queryCity +\",\" +queryCountry + \"&key=\" +\"2551ef41f38046fcb56ab8ba401db382\"; //REPLACE LATER\n        \n        axios.get(linkStr).then(res => {\n            // const data = res.data;\n            this.state.response = res.data;\n            console.log(this.state.response)\n          })\n\n        //   this.geocodeLocation(\"Los Angeles\", \"California\")\n        // let response;\n        // const getData = async (link=linkStr) => {\n        //     // setLoading(true)\n        //     // let response;\n        //     try {\n        //         this.state.response = await axios.get(link);\n        //         console.log(this.state.response);\n    \n        //         // setData([...data, response.data]);\n                \n        //     } catch(err) {\n        //         console.log(err)\n        //     }\n        //     // setLoading(false)\n        // }\n        // getData(linkStr);\n        // console.log(\"here\", getData(linkStr));\n        // console.log(\"here\", this.state.response);\n        this.getLatAndLng(this.state.response);\n        \n    }\n    getLatAndLng(response){\n        console.log(\"why\",response);\n        if(Object.keys(response).length !== 0){\n            console.log(\"why\",response);\n\n            var lat = response[\"data\"][0][\"geometry\"][\"lat\"];\n            var lng = response[\"data\"][0][\"geometry\"][\"lng\"];\n            console.log(lat, lng);\n        }\n\n        // console.log(lat, lng);\n    }\n    componentDidMount (){\n        var navbar = document.getElementById(\"nav\");\n        navbar.style.color = \"black\";\n\n    }\n    revealBtn(){\n        var linkResults = document.getElementsByClassName(\"linkResults\")[0];\n        linkResults.style.display = \"inline-block\";\n    }\n\n    inputHandler(e){\n        this.state.countryValue = e.target.value;\n        this.state.citiesLst = this.updateCityOptions();\n    }\n\n    enableCities(e){\n        this.state.countryValue = e.target.value;\n        this.state.citiesLst = this.updateCityOptions();\n        let second = document.getElementById(\"second\");\n        second.style.display=\"inline\";\n    }\n\n    removeDups(){\n        var cities = Object.values(countries[\"Greece\"]).map((option) => option);\n        let newSet = new Set(cities);\n        this.state.citiesLst = Array.from(newSet);\n        console.log(\"after\", this.state.citiesLst,this.state.citiesLst.length)\n        return this.state.citiesLst;\n    }\n\n    updateCityOptions(){\n        var i = this.findCountryIndex(this.state.countryValue);\n        return Object.values(countries)[i];\n    }\n\n    findCountryIndex(country){\n        var countriesLst = Object.keys(countries);\n        var position;\n\n        for(var i = 0; i < countriesLst.length; i++){\n            if(countriesLst[i].includes(country)){\n                position = i;\n                break;\n            }\n        }\n        // console.log(\"find country index\", country, position);\n        return position;\n    }\n  render(){\n    return (\n        <motion.div className=\"searchBar\" exit= {{opacity: 0, transition: { ease: 'easeInOut'}}}\n        >\n        <div id=\"instructions\">\n            Please Enter a Location:\n        </div>\n        <Autocomplete \n            freeSolo\n            id=\"countrySelect\"\n            className=\"autocomplete\"\n            disableClearable\n            options={Object.keys(countries).map((option) => option)}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    id=\"countryTextField\"\n                    label=\"Country\"\n                    margin=\"normal\"\n                    required\n                    value={this.state.countryValue}\n                    onChange={this.inputHandler}\n                    onSelect={this.enableCities}\n                    variant=\"outlined\"\n                    InputProps={{...params.InputProps, type: 'search'}}\n                />\n            )}\n        />\n\n        <div id=\"second\">\n\n\n            <Autocomplete \n                freeSolo\n                id=\"citySelect\"\n                className=\"autocomplete\"\n                disableClearable\n                options={this.removeDups}\n                // options={Object.values(countries).map((option) => option[0])}\n                // required\n                renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"City\"\n                        margin=\"normal\"\n                        required\n                        value={this.state.cityValue}\n                        onSelect={this.revealBtn}\n                        // onChange={updateCityOptions}\n                        variant=\"outlined\"\n                        InputProps={{...params.InputProps, type: 'search'}}\n                    />\n                )}\n            />\n        </div>\n\n        <div className=\"linkResults\" id=\"btnDiv\">\n            <Link id=\"resultsBtn\" to=\"/results\">Generate Playlist! </Link>\n        </div>\n        \n        \n\n        </motion.div>\n    \n\n\n    );\n  }\n}\n\n\n// function SearchBar() {\n//     var countryValue = \"\";\n//     var cityValue = \"\";\n//     var citiesLst = [];\n\n\n//     function revealBtn(){\n//         var linkResults = document.getElementsByClassName(\"linkResults\")[0];\n//         linkResults.style.display = \"inline-block\";\n//     }\n\n//     const inputHandler = function(e){\n//         countryValue = e.target.value;\n//         citiesLst = updateCityOptions();\n//         console.log(\"before\", countryValue, citiesLst);\n//     }\n\n//     const enableCities = function(e){\n//         countryValue = e.target.value;\n//         citiesLst = updateCityOptions();\n//         let second = document.getElementById(\"second\");\n//         second.style.display=\"inline\";\n//         console.log(citiesLst);\n//     }\n\n//     function removeDups(){\n//         var cities = Object.values(countries[\"Greece\"]).map((option) => option);\n//         let newSet = new Set(cities);\n//         citiesLst = Array.from(newSet);\n//         console.log(\"after\", citiesLst,citiesLst.length)\n//         return citiesLst;\n//     }\n   \n//     function updateCityOptions(){\n//         var i = findCountryIndex(countryValue);\n//         return Object.values(countries)[i];\n//     }\n\n//     function findCountryIndex(country){\n//         var countriesLst = Object.keys(countries);\n//         var position;\n\n//         for(var i = 0; i < countriesLst.length; i++){\n//             if(countriesLst[i].includes(country)){\n//                 position = i;\n//                 break;\n//             }\n//         }\n//         // console.log(\"find country index\", country, position);\n//         return position;\n//     }\n\n//     return (\n//       <motion.div className=\"searchBar\" exit= {{opacity: 0, transition: { ease: 'easeInOut'}}}\n//       >\n//        <div id=\"instructions\">\n//            Please Enter a Location:\n//        </div>\n//         <Autocomplete \n//             freeSolo\n//             id=\"countrySelect\"\n//             className=\"autocomplete\"\n//             disableClearable\n//             options={Object.keys(countries).map((option) => option)}\n//             renderInput={(params) => (\n//                 <TextField\n//                     {...params}\n//                     id=\"countryTextField\"\n//                     label=\"Country\"\n//                     margin=\"normal\"\n//                     required\n//                     value={countryValue}\n//                     onChange={inputHandler}\n//                     onSelect={enableCities}\n//                     variant=\"outlined\"\n//                     InputProps={{...params.InputProps, type: 'search'}}\n//                 />\n//             )}\n//         />\n\n//         <div id=\"second\">\n\n\n//             <Autocomplete \n//                 freeSolo\n//                 id=\"citySelect\"\n//                 className=\"autocomplete\"\n//                 disableClearable\n//                 options={removeDups()}\n//                 // options={Object.values(countries).map((option) => option[0])}\n//                 // required\n//                 renderInput={(params) => (\n//                     <TextField\n//                         {...params}\n//                         label=\"City\"\n//                         margin=\"normal\"\n//                         required\n//                         value={cityValue}\n//                         onSelect={revealBtn}\n//                         // onChange={updateCityOptions}\n//                         variant=\"outlined\"\n//                         InputProps={{...params.InputProps, type: 'search'}}\n//                     />\n//                 )}\n//             />\n//         </div>\n\n//         <div className=\"linkResults\">\n//             <Link id=\"resultsBtn\" to=\"/results\">Generate Playlist! </Link>\n//         </div>\n        \n        \n  \n//       </motion.div>\n  \n  \n//     );\n//   }\n  \n  export default SearchBar;\n  \n\n","/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Pages/Results.js",["115","116","117"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/getLoginStatus.js",["118","119"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/MapComponent.js",["120","121","122","123"],"/Users/sydneychiang/Downloads/melloweather-main/melloweather/src/Components/AutocompleteMaps.js",[],{"ruleId":"124","severity":1,"message":"125","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":12},{"ruleId":"124","severity":1,"message":"128","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":23},{"ruleId":"124","severity":1,"message":"129","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":35},{"ruleId":"124","severity":1,"message":"130","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":12},{"ruleId":"124","severity":1,"message":"131","line":6,"column":20,"nodeType":"126","messageId":"127","endLine":6,"endColumn":26},{"ruleId":"124","severity":1,"message":"132","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":7},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"124","severity":1,"message":"137","line":2,"column":17,"nodeType":"126","messageId":"127","endLine":2,"endColumn":26},{"ruleId":"124","severity":1,"message":"138","line":14,"column":7,"nodeType":"126","messageId":"127","endLine":14,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":41,"column":9,"nodeType":"141","endLine":41,"endColumn":51},{"ruleId":"124","severity":1,"message":"128","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":26,"column":22,"nodeType":"141","endLine":26,"endColumn":58},{"ruleId":"124","severity":1,"message":"142","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":23},{"ruleId":"124","severity":1,"message":"143","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":19},{"ruleId":"124","severity":1,"message":"142","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"137","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"128","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":23},{"ruleId":"124","severity":1,"message":"137","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"128","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":23},{"ruleId":"124","severity":1,"message":"142","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"144","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":17},{"ruleId":"124","severity":1,"message":"145","line":24,"column":14,"nodeType":"126","messageId":"127","endLine":24,"endColumn":24},{"ruleId":"124","severity":1,"message":"146","line":25,"column":7,"nodeType":"126","messageId":"127","endLine":25,"endColumn":14},{"ruleId":"124","severity":1,"message":"147","line":27,"column":11,"nodeType":"126","messageId":"127","endLine":27,"endColumn":23},{"ruleId":"124","severity":1,"message":"142","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"148","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":17},{"ruleId":"124","severity":1,"message":"142","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":36,"column":113,"nodeType":"151","messageId":"152","endLine":36,"endColumn":114},{"ruleId":"153","severity":1,"message":"154","line":40,"column":13,"nodeType":"155","endLine":40,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":89,"column":9,"nodeType":"155","endLine":89,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":90,"column":9,"nodeType":"155","endLine":90,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":94,"column":9,"nodeType":"155","endLine":94,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":95,"column":9,"nodeType":"155","endLine":95,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":103,"column":9,"nodeType":"155","endLine":103,"endColumn":19},{"ruleId":"124","severity":1,"message":"142","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"156","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":54,"column":15,"nodeType":"141","endLine":54,"endColumn":184},{"ruleId":"159","severity":1,"message":"160","line":11,"column":15,"nodeType":"161","messageId":"162","endLine":11,"endColumn":28},{"ruleId":"124","severity":1,"message":"163","line":20,"column":9,"nodeType":"126","messageId":"127","endLine":20,"endColumn":22},{"ruleId":"124","severity":1,"message":"132","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"164","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":22},{"ruleId":"124","severity":1,"message":"165","line":96,"column":11,"nodeType":"126","messageId":"127","endLine":96,"endColumn":16},{"ruleId":"124","severity":1,"message":"166","line":98,"column":11,"nodeType":"126","messageId":"127","endLine":98,"endColumn":18},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'CurrentLocation' is defined but never used.","'useState' is defined but never used.","'logo' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'Component' is defined but never used.","'images' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavBar' is defined but never used.","'AskLocation' is defined but never used.","'SearchBar' is defined but never used.","'setAddress' is defined but never used.","'address' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'countries' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'makeStyles' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'refresh_token' is assigned a value but never used.","'Autocomplete' is defined but never used.","'input' is assigned a value but never used.","'options' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]